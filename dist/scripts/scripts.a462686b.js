"use strict";angular.module("myTodoAngularApp",["ngAnimate","ngCookies","ngResource","ngRoute","ngSanitize","ngTouch","ui.date"]).config(["$routeProvider","$locationProvider",function(a,b){a.when("/",{templateUrl:"views/todo.html",controller:"TodoController"}).when("/main",{templateUrl:"views/main.html",controller:"MainController"}).when("/about",{templateUrl:"views/about.html",controller:"AboutController"}).otherwise({redirectTo:"/"}),b.html5Mode(!0)}]),angular.module("myTodoAngularApp").controller("MainController",["$scope",function(a){a.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"]}]),angular.module("myTodoAngularApp").controller("AboutController",["$scope",function(a){a.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"]}]),angular.module("myTodoAngularApp").controller("TodoController",["$scope",function(a){function b(){h?localStorage.setItem("myTodos",JSON.stringify(a.todos)):document.cookie="myTodos="+window.btoa(JSON.stringify(a.todos))}function c(a){a.isEditing=!1}function d(){a.newTodoText="",a.newTodoPriority="",$("#newTodoDate").val("")}function e(){for(var b=0,c=0;c<a.todos.length;c++){var d=a.todos[c],e=d.id;e>b&&(b=e)}return b}function f(a){var b="; "+document.cookie,c=b.split("; "+a+"=");return 2===c.length?c.pop().split(";").shift():void 0}function g(a,b){var c=864e5,d=a.getTime(),e=b.getTime(),f=e-d;return Math.round(f/c)}a.inputTypeDateSupported=window.Modernizr.inputtypes.date;var h=!1;if("undefined"!=typeof Storage&&(h=!0),a.newTodoText="",a.newTodoPriority="",a.todoSortBy="duedate",a.isEditingTodo=!1,h)a.todos=JSON.parse(localStorage.getItem("myTodos"));else{var i=f("myTodos");void 0!==i&&(a.todos=JSON.parse(window.atob(i)))}(null===a.todos||void 0===a.todos)&&(a.todos=[]),a.currentMaxId=e(),a.$watch("todos.length",function(){b()}),a.addNewTodo=function(){return""===a.newTodoText?void noty({type:"error",text:"Description cannot be blank!",timeout:1e3}):""===a.newTodoPriority?void noty({type:"error",text:"Priority must be set!",timeout:1e3}):""===$("#newTodoDate").val()?void noty({type:"error",text:"Due date must be set!",timeout:1e3}):(a.todos[a.todos.length]={id:++a.currentMaxId,description:a.newTodoText,duedate:Date.parse($("#newTodoDate").val()).toISOString(),priority:a.newTodoPriority},void d())},a.startEditingTodo=function(a){a.isEditing=!0,a.editTodoDate=Date.parse(a.todo.duedate)},a.cancelEditingTodo=function(a){c(a)},a.saveEditingTodo=function(a){var d=a.editTodoDate.toISOString();a.todo.duedate=d,b(),c(a)},a.removeTodo=function(b){b>-1&&a.todos.splice(b,1)},a.getDateString=function(a){var b=g(Date.today(),Date.parse(a));return 0>b?-1===b?"1 day overdue":-b+" days overdue":Date.today().equals(Date.parse(a).at("0:00"))?"Today":Date.parse("tomorrow").equals(Date.parse(a).at("0:00"))?"Tomorrow":Date.parse(a).toString("d MMM 'yy")},a.priorityColorClass=function(a){return a=parseInt(a),1===a?"bg-red":2===a?"bg-green":3===a?"bg-blue":""}}]);